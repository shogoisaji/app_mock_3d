# task_005_3d_manipulation.yaml
# 3D操作機能実装
# 作成日: 2025-08-04

# ── 基本情報 ─────────────────────────────
task_id: 005
title: "3D操作機能実装"
parent_task_id: null
status: in_progress
priority: 2
tags: ["3d", "gestures", "manipulation", "interaction"]

# ── 進捗管理 ─────────────────────────────
progress:
  completed_steps: [1, 2, 3, 4, 5, 6]
  current_step: 6
  blockers: []
  notes: "主要な3D操作機能を実装完了。単体テストも作成済み。"

# ── 必要素材 ───────────────────────────
inputs:
  - title: "基本UI"
    status: pending
    description: "task_003の完了"
    items: ["task_003_basic_ui.yaml"]
    required: true
  - title: "3Dモデルシステム"
    status: pending
    description: "task_002の完了"
    items: ["task_002_3d_model_system.yaml"]
    required: true
  - title: "操作仕様"
    status: present
    description: "spec.yamlの3D操作要件"
    items: ["spec.yaml#core_features.three_d_manipulation"]
    required: true
  - title: "インタラクション仕様"
    status: present
    description: "spec.yamlのUI操作仕様"
    items: ["spec.yaml#user_interface.interaction_modes"]
    required: true

# ── 期待成果物 ─────────────────────────
outputs:
  - title: "ジェスチャー管理システム"
    status: pending
    items: ["Sources/Services/GestureManager.swift"]
  - title: "3D変換マネージャー"
    status: pending
    items: ["Sources/Services/Transform3DManager.swift"]
  - title: "操作モード管理"
    status: pending
    items: ["Sources/Models/InteractionMode.swift"]
  - title: "ジェスチャーレコグナイザー"
    status: pending
    items: ["Sources/Views/GestureRecognizerView.swift"]
  - title: "単体テスト"
    status: pending
    items: ["Tests/Unit/ManipulationTests.swift"]

# ── 実装ステップ ───────────────────────
steps:
  - number: 1
    title: "操作モード定義"
    description: |
      3D操作の各モードを定義:
      - InteractionMode enum（move, scale, rotate, aspect, background, device）
      - 各モードの状態管理
      - モード切り替えロジック
      - UI反映システム
    estimated_time: 30
    dependencies: []
    files_to_modify: ["Sources/Models/InteractionMode.swift"]
    acceptance_criteria: "操作モードが適切に定義され、状態管理が機能する"

  - number: 2
    title: "基本ジェスチャーレコグナイザー実装"
    description: |
      SwiftUIジェスチャーレコグナイザーの実装:
      - DragGesture（移動・回転用）
      - MagnificationGesture（拡大縮小用）
      - RotationGesture（回転用）
      - 同時ジェスチャー処理
      - ジェスチャー競合の解決
    estimated_time: 90
    dependencies: [1]
    files_to_modify: ["Sources/Views/GestureRecognizerView.swift"]
    acceptance_criteria: "各ジェスチャーが適切に認識され、競合なく動作する"

  - number: 3
    title: "移動操作実装"
    description: |
      3Dモデルの移動機能:
      - 1本指ドラッグでXY軸移動
      - 2本指ドラッグでZ軸移動（奥行き）
      - 移動範囲の制限
      - スムーズな移動アニメーション
      - 移動量の調整機能
    estimated_time: 75
    dependencies: [2]
    files_to_modify: ["Sources/Services/Transform3DManager.swift"]
    acceptance_criteria: "3軸すべての移動が滑らかに動作し、適切な範囲制限がある"

  - number: 4
    title: "拡大縮小操作実装"
    description: |
      3Dモデルのスケーリング機能:
      - ピンチジェスチャーでの拡大縮小
      - 0.5×〜3.0×の範囲制限
      - 等比拡大縮小の維持
      - スケール値の表示
      - スムーズなスケーリングアニメーション
    estimated_time: 60
    dependencies: [2]
    files_to_modify: ["Sources/Services/Transform3DManager.swift"]
    acceptance_criteria: "ピンチ操作で適切な範囲内でスケーリングができる"

  - number: 5
    title: "回転操作実装"
    description: |
      3Dモデルの回転機能:
      - 1本指回転ジェスチャーでZ軸回転
      - 2本指ドラッグでXY軸回転
      - 自由回転（360度制限なし）
      - 回転慣性の実装
      - 回転角度の表示
    estimated_time: 90
    dependencies: [2]
    files_to_modify: ["Sources/Services/Transform3DManager.swift"]
    acceptance_criteria: "3軸すべての回転が自然に動作し、慣性効果がある"

  - number: 6
    title: "ジェスチャー統合管理"
    description: |
      全ジェスチャーの統合管理システム:
      - 操作モードに応じたジェスチャー有効/無効切り替え
      - 複数ジェスチャーの優先度管理
      - ジェスチャー状態のリセット機能
      - パフォーマンス最適化
    estimated_time: 75
    dependencies: [3, 4, 5]
    files_to_modify: ["Sources/Services/GestureManager.swift"]
    acceptance_criteria: "操作モードに応じて適切なジェスチャーのみが有効になる"

  - number: 7
    title: "視覚フィードバック実装"
    description: |
      操作時の視覚的フィードバック:
      - 操作中のハイライト表示
      - 変形量の数値表示
      - 操作ガイドの表示
      - 範囲制限時の警告表示
    estimated_time: 60
    dependencies: [6]
    files_to_modify: ["Sources/Views/OperationFeedbackView.swift"]
    acceptance_criteria: "操作状況が視覚的に分かりやすく表示される"

  - number: 8
    title: "パフォーマンス最適化"
    description: |
      3D操作のパフォーマンス調整:
      - 60fps維持のための最適化
      - ジェスチャー処理の軽量化
      - 不要な再描画の削減
      - メモリ使用量の最適化
    estimated_time: 45
    dependencies: [7]
    files_to_modify: ["Sources/Services/PerformanceOptimizer.swift"]
    acceptance_criteria: "全操作が60fpsで滑らかに動作する"

  - number: 9
    title: "単体テスト作成"
    description: |
      3D操作機能のテスト:
      - 各変換操作の正確性テスト
      - 範囲制限テスト
      - ジェスチャー認識テスト
      - パフォーマンステスト
      - 操作モード切り替えテスト
    estimated_time: 90
    dependencies: [8]
    files_to_modify: ["Tests/Unit/ManipulationTests.swift"]
    acceptance_criteria: "全テストが成功し、操作の正確性が保証される"

# ── メタデータ ─────────────────────────────
created_at: 2025-08-04T15:00:00+09:00
updated_at: 2025-08-04T15:00:00+09:00